{"version":3,"sources":["../../src/controllers/ctrlWallet.js"],"names":["createWalletEth","req","res","wallet","WalletEth","create","user","User","updateOne","_id","$set","walletEth","n","ok","status","send","message","error","err","transactionEth","body","toAddress","amount","person","findOne","transaction","privateKey","address","hash","fromAddress","date","getBalanceEth","getBalance","balance","getHistoricEth","result","getHistorial","createWalletBtc","WalletBtc","walletBtc","createWalletBch","WalletBch","console","log","walletBch","createWalletLtc","WalletLtc","walletLtc","transactionBtc"],"mappings":"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","file":"ctrlWallet.js","sourcesContent":["'use strict';\n\nimport User from '../models/SchemaUser';\nimport WalletEth from '../services/walletEth';\nimport WalletBtc from '../services/walletBtc';\nimport WalletBch from '../services/walletBch';\nimport WalletLtc from '../services/walletLtc';\nimport moment from 'moment';\n\nexport const createWalletEth = async(req,res)=>{\n\ttry\n\t{\n\t\tlet wallet = WalletEth.create();\n\t\tconst user = await User.updateOne({_id:req.user},{$set:{walletEth:wallet}});\n        if(user.n > 0 && user.ok > 0) return res.status(201).send({message : 'cartera creada con exito'});\n        res.status(400).send({error:'No se pudo crear su cartera'});\n\t}\n\tcatch(err)\n\t{\n\t\tres.status(500).send({error:'Error en el servidor'});\n\t}\n}\n\nexport const transactionEth = async(req,res)=>{\n\ttry\n\t{\n\t\tlet {\n\t\t\ttoAddress,\n\t\t\tamount\n\t\t} = req.body;\n\t\tlet person = await User.findOne({_id:req.user},{walletEth:true});\n        let transaction = await WalletEth.transaction(person.walletEth.privateKey,person.walletEth.address,toAddress,amount)\n        if(transaction.status===201) return res.status(transaction.status).send({\n        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thash:transaction.hash,\n        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tamount : amount,\n        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfromAddress : person.walletEth.address,\n        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoAddress : toAddress,\n        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate : moment()\n        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n        \t\n\t\tres.status(transaction.status).send({error : transaction.error})\n\n\t}\n\tcatch(err)\n\t{\n\t\tres.status(err.status).send({error:err.message});\n\t}\n}\n\nexport const getBalanceEth = async(req,res)=>{\n\ttry\n\t{\n\t\tlet person = await User.findOne({_id:req.user},{walletEth:true});\n\t\tlet wallet = await WalletEth.getBalance(person.walletEth.address);\n\t\tif(wallet.status===200) return res.status(wallet.status).send({balance:wallet.balance});\n\t\tres.status(wallet.status).send({error : wallet.error})\n\n\t}\n\tcatch(err)\n\t{\n\t\tres.status(500).send({error:'Error en el servidor'});\n\t}\n}\n\nexport const getHistoricEth = async(req,res)=>{\n\ttry\n\t{\n\t\tlet person = await User.findOne({_id:req.user},{walletEth:true});\n\t\tlet result = await WalletEth.getHistorial(person.walletEth.address);\n\t\t//if(result.status===200) return res.status(result.status).send({historic:result.transactions});\n\t\t//res.status(result.status).send({error : result.error})\n\n\t}\n\tcatch(err)\n\t{\n\t\tres.status(500).send({error:'Error en el servidor'});\n\t}\n}\n\nexport const createWalletBtc = async(req,res)=>{\n\ttry\n\t{\n\t\tlet wallet = WalletBtc.create();\n\t\tconst user = await User.updateOne({_id:req.user},{$set:{walletBtc:wallet}});\n        if(user.n > 0 && user.ok > 0) return res.status(201).send({message : 'cartera creada con exito'});\n        res.status(400).send({error:'No se pudo crear su cartera'});\n\t}\n\tcatch(err)\n\t{\n\t\tres.status(500).send({error:err});\n\t}\n}\n\nexport const createWalletBch = async(req,res)=>{\n\ttry\n\t{\n\t\tlet wallet = WalletBch.create();\n\t\tconsole.log(wallet)\n\t\tconst user = await User.updateOne({_id:req.user},{$set:{walletBch:wallet}});\n        if(user.n > 0 && user.ok > 0) return res.status(201).send({message : 'cartera creada con exito'});\n        res.status(400).send({error:'No se pudo crear su cartera'});\n\t}\n\tcatch(err)\n\t{\n\t\tres.status(500).send({error:err});\n\t}\n}\n\n\nexport const createWalletLtc = async(req,res)=>{\n\ttry\n\t{\n\t\tlet wallet = WalletLtc.create();\n\t\tconst user = await User.updateOne({_id:req.user},{$set:{walletLtc:wallet}});\n        if(user.n > 0 && user.ok > 0) return res.status(201).send({message : 'cartera creada con exito'});\n        res.status(400).send({error:'No se pudo crear su cartera'});\n\t}\n\tcatch(err)\n\t{\n\t\tres.status(500).send({error:err});\n\t}\n}\n\nexport const transactionBtc = async(req,res)=>{\n\ttry\n\t{\n\t\tlet {\n\t\t\ttoAddress,\n\t\t\tamount\n\t\t} = req.body;\n\t\tlet person = await User.findOne({_id:req.user},{walletBtc:true});\n        let transaction = await WalletBtc.transaction(person.walletBtc.privateKey,person.walletBtc.address,toAddress,amount)\n        \n\t}\n\tcatch(err)\n\t{\n\t\tconsole.log(err)\n\t\tres.status(500).send({error:err});\n\t}\n}"]}