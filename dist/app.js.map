{"version":3,"sources":["../src/app.js"],"names":["global","config","configuration","Server","app","set","server","port","use","express","json","urlencoded","extended","bodyParser","static","path","join","__dirname","Database","connect","main","http","createServer","listen","console","log","ip","address","db"],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEAA,OAAOC,MAAP,GAAgBC,uBAAhB;;IAEMC,M;AACL,mBAAa;AAAA;;AACZ,OAAKD,aAAL,GAAqBD,MAArB;AACA,OAAKG,GAAL,GAAW,wBAAX;AACA;;;;uBAEIA,G,EACL;AACCA,OAAIC,GAAJ,CAAQ,MAAR,EAAe,KAAKH,aAAL,CAAmBI,MAAnB,CAA0BC,IAAzC;AACAH,OAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAJ,OAAII,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAN,OAAII,GAAJ,CAAQC,kBAAQE,UAAR,CAAmB,EAAEC,UAAU,KAAZ,EAAnB,CAAR;AACAR,OAAII,GAAJ,CAAQ,6BAAR;AACAJ,OAAII,GAAJ,CAAQK,qBAAWF,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;AACAR,OAAII,GAAJ,CAAQ,qBAAR;AACAJ,OAAII,GAAJ,CAAQC,kBAAQK,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAb,OAAII,GAAJ,CAAQ,UAAR,EAAoBC,kBAAQK,MAAR,CAAeG,YAAW,aAA1B,CAApB;AACA,yBAAOb,GAAP;AACA;;;qBAEEG,I,EACH;AACCW,sBAASC,OAAT,CAAiBZ,IAAjB;AACA;;;2BAKD;AAAA;;AACC,QAAKa,IAAL,CAAU,KAAKhB,GAAf;AACA,QAAKE,MAAL,GAAce,eAAKC,YAAL,CAAkB,KAAKlB,GAAvB,CAAd;AACA,QAAKE,MAAL,CAAYiB,MAAZ,CAAmB,KAAKrB,aAAL,CAAmBI,MAAnB,CAA0BC,IAA7C,EAAmD,YAAM;AACxDiB,YAAQC,GAAR,eAAwBC,aAAGC,OAAH,EAAxB,SAAwC,MAAKzB,aAAL,CAAmBI,MAAnB,CAA0BC,IAAlE;AACA,UAAKqB,EAAL,CAAQ,MAAK1B,aAAL,CAAmB0B,EAAnB,CAAsBrB,IAA9B;AACA,IAHD;AAKA;;;;;;kBAIa,IAAIJ,MAAJ,E","file":"app.js","sourcesContent":["'use strict';\n\nimport express from 'express';\nimport path from 'path';\nimport cookieParser from 'cookie-parser';\nimport logger from 'morgan';\nimport cors from 'cors';\nimport bodyParser  from 'body-parser';\nimport http from 'http';\nimport configuration from './configuration';\nimport ip from 'ip';\nimport Database from './configurations/database';\nimport router from './routes';\n\nglobal.config = configuration;\n\nclass Server{\n\tconstructor(){\n\t\tthis.configuration = config;\n\t\tthis.app = express();\n\t}\n\n\tmain(app)\n\t{\n\t\tapp.set('port',this.configuration.server.port);\n\t\tapp.use(logger('dev'));\n\t\tapp.use(express.json());\n\t\tapp.use(express.urlencoded({ extended: false }));\n\t\tapp.use(cookieParser());\n\t\tapp.use(bodyParser.urlencoded({extended: false}));\n\t\tapp.use(cors());\n\t\tapp.use(express.static(path.join(__dirname, 'public')));\n\t\tapp.use('/uploads', express.static(__dirname +'/../uploads'));\n\t\trouter(app);\n\t}\n\n\tdb(port)\n\t{\n\t\tDatabase.connect(port);\n\t}\n\n\n\n\tlisten()\n\t{\n\t\tthis.main(this.app);\n\t\tthis.server = http.createServer(this.app);\n\t\tthis.server.listen(this.configuration.server.port, () => {\t\n\t\t\tconsole.log(`listener ${ip.address()}:${this.configuration.server.port}`);\n\t\t\tthis.db(this.configuration.db.port);\n\t\t})\n\n\t}\n\n}\n\nexport default new Server;"]}